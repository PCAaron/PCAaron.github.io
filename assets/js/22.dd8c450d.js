(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{221:function(r,t,v){"use strict";v.r(t);var _=v(0),e=Object(_.a)({},(function(){var r=this,t=r.$createElement,v=r._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[v("h1",{attrs:{id:"番外篇：一篇读懂浏览器结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#番外篇：一篇读懂浏览器结构"}},[r._v("#")]),r._v(" 番外篇：一篇读懂浏览器结构")]),r._v(" "),v("h2",{attrs:{id:"浏览器结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器结构"}},[r._v("#")]),r._v(" 浏览器结构")]),r._v(" "),v("p",[r._v("浏览器的主要组件：")]),r._v(" "),v("p",[v("img",{attrs:{src:"/chrome/layers.png",alt:"浏览器结构"}})]),r._v(" "),v("p",[r._v("1、"),v("strong",[r._v("用户界面")]),r._v("：包括地址栏、前进/后退按钮，书签菜单等。除了浏览器主窗口用于显示\n网页外，其他显示的部分属于用户界面。"),v("br"),r._v("\n2、"),v("strong",[r._v("浏览器引擎")]),r._v("：在用户界面和渲染引擎直接传送指令。一方面提供对渲染引擎的高级接口，另一方面提供初始化加载URL和其他用户界面的方法，如刷新后退等\n和用户界面提供错误、加载进度等消息。"),v("br"),r._v("\n3、"),v("strong",[r._v("呈现引擎(渲染引擎)")]),r._v("：一般称为“浏览器内核”，负责显示请求的内容。如果请求的内容是HTML，则负责解析HTML和CSS内容并显示\n在屏幕上。其中不用浏览器的渲染引擎存在差异。例如IE使用Trident，Firefox使用的Mozilla公司“自制”的Gecko\n渲染引擎，而Safari、Opera和Chrome浏览器则使用的是Webkit，一种开放源代码呈现引擎。"),v("br"),r._v("\n4、"),v("strong",[r._v("网络")]),r._v("：基于互联网HTTP和FTP协议，用于处理网络请求，其提供接口用于为所有平台提供底层实现。"),v("br"),r._v("\n5、"),v("strong",[r._v("用户界面后端")]),r._v("：用户汇总基本的窗口小部件，如组合框和窗口。"),v("br"),r._v("\n6、"),v("strong",[r._v("JavaScript解析器")]),r._v("：用于解析和执行JavaScript代码，并将结果传递到渲染引擎展示。其中\nChrome的JS解析器为基于C++的V8引擎，Firfox的是基于C的Spider-Monkey，而IE的有JScript和VBScript。"),v("br"),r._v("\n7、"),v("strong",[r._v("数据存储")]),r._v("：数据持久化。浏览器需要在硬盘上保存各种数据，例如Cookie等。")]),r._v(" "),v("p",[r._v("如今基本上浏览器的每个标签页都分别对应一个渲染引擎实例。即每个标签页除了属于同一站点(即协议和根域名相同)\n都有一个独立的渲染进程。")]),r._v(" "),v("p",[r._v("但是如果页面存在多个iframe来自不同站点，会导致不同站点中的内容通过iframe同时运行在一个渲染进程中，导致\n幽灵和熔毁的漏洞，所以通过支持站点隔离实现将标签级的渲染进程重构为iframe级的渲染进程，按照同一站点\n的策略来分配渲染进程。")]),r._v(" "),v("h2",{attrs:{id:"浏览器内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[r._v("#")]),r._v(" 浏览器内核")]),r._v(" "),v("p",[r._v("浏览器的核心部分就是渲染引擎，其中有如下的常驻线程：")]),r._v(" "),v("ul",[v("li",[v("strong",[r._v("GUI渲染线程")]),r._v("：负责解析HTML，CSS，构建DOM数及页面布局和绘制等。")]),r._v(" "),v("li",[v("strong",[r._v("JavaScript引擎线程")]),r._v("：负责解析JavaScript脚本，运行代码，"),v("strong",[r._v("一个渲染进程中只有一个\nJavaScript线程在运行，所以会存在JS阻塞")]),r._v("，另外，"),v("strong",[r._v("GUI渲染线程和JS引擎是互斥的")]),r._v("，因为\nJavaScript可通过操作DOM修改元素，所以当JavaScript执行时，GUI线程会挂起，这种情况会导致\n页面渲染阻塞，页面渲染不连贯。")]),r._v(" "),v("li",[v("strong",[r._v("事件触发线程")]),r._v("：负责维护事件队列，当一些事件被触发时，该线程会把事件添加至事件队列的末尾，等待JS引擎处理。")]),r._v(" "),v("li",[v("strong",[r._v("定时器线程")]),r._v("：浏览器定时器会通过单独的线程来计时并触发定时任务。")]),r._v(" "),v("li",[v("strong",[r._v("异步http请求线程")]),r._v("：在XMLHttpRequest在连接后是通过浏览器新开一个线程来实现，通过监听连接\n状态的变化来将回调放入事件队列中。")])]),r._v(" "),v("h2",{attrs:{id:"浏览器内部工作原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内部工作原理"}},[r._v("#")]),r._v(" 浏览器内部工作原理")]),r._v(" "),v("p",[r._v("渲染一个页面，浏览器内部的工作原理：")]),r._v(" "),v("p",[v("img",{attrs:{src:"/chrome/one1.jpg",alt:"chrome运行时进程"}})]),r._v(" "),v("ul",[v("li",[v("strong",[r._v("浏览器进程")]),r._v("：主要负责界面显示、用户交互、子进程管理，同时提供存储等功能。")]),r._v(" "),v("li",[v("strong",[r._v("渲染进程")]),r._v("：核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页。")]),r._v(" "),v("li",[v("strong",[r._v("GPU进程")]),r._v("：3D CSS效果，UI界面绘制。")]),r._v(" "),v("li",[v("strong",[r._v("网络进程")]),r._v("：主要负责页面的网络资源加载。")]),r._v(" "),v("li",[v("strong",[r._v("插件进程")]),r._v("：负责插件的运行环境。")])]),r._v(" "),v("h2",{attrs:{id:"推荐阅读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[r._v("#")]),r._v(" 推荐阅读")]),r._v(" "),v("p",[r._v("浏览器的高级结构："),v("a",{attrs:{href:"http://taligarsiel.com/Projects/howbrowserswork1.htm#The_browser_high_level_structure",target:"_blank",rel:"noopener noreferrer"}},[r._v("http://taligarsiel.com/Projects/howbrowserswork1.htm#The_browser_high_level_structure"),v("OutboundLink")],1)]),r._v(" "),v("p",[r._v("一文看透浏览器架构："),v("a",{attrs:{href:"https://www.jianshu.com/p/a37990edd38a",target:"_blank",rel:"noopener noreferrer"}},[r._v("https://www.jianshu.com/p/a37990edd38a"),v("OutboundLink")],1)]),r._v(" "),v("p",[r._v("仅仅打开了1个页面，为什么有4个进程？:"),v("a",{attrs:{href:"https://pcaaron.github.io/pages/fe/chrome/view.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("https://pcaaron.github.io/pages/fe/chrome/view.html"),v("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);